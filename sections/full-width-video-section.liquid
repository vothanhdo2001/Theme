{%- capture html -%}
<div class="full__width_video" id="section-{{ section.id }}">
  {% if section.settings.section_title != '' %}
  <div class="container">
    <div class="row">
      <div class="col-12">
        <div class="section-title">
          <h2>{{ section.settings.section_title }}</h2>
        </div>
      </div>
    </div>
  </div>
  <br>
  {% endif %}
  <div class="container-fluid p-0">
    <div class="row no-gutters">
      <div class="col-12">
        <div class="main-slider">

          {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when 'vimeo_video' -%}
          <div class="item vimeo">
            <iframe class="embed-player slide-media embed-responsive-16by9" src="https://player.vimeo.com/video/{{ block.settings.banner_video_url.id }}?api=1&byline=0&portrait=0&title=0&background=1&mute=1&loop=1&autoplay=1&id=217885864" width="100%" height="100%" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
          </div>
		  {%- when 'youtube_video' -%}
          <div class="item youtube">
            <iframe class="embed-player slide-media embed-responsive-16by9" width="100%" height="100%" src="https://www.youtube.com/embed/{{ block.settings.banner_video_url.id }}?enablejsapi=1&controls=0&fs=0&iv_load_policy=3&rel=0&showinfo=0&loop=1&playlist={{ section.settings.banner_video_url.id }}&start=1" frameborder="0" allowfullscreen></iframe> 
          </div>
		  {%- when 'local_video' -%}
          <div class="item video">
            <video playsinline class="slide-video slide-media " loop muted preload="metadata" poster="{{ block.settings.poster_banner_url }}">
              <source src="{{ block.settings.banner_video_url }}" type="video/mp4" />
            </video>
          </div>
          {%- endcase -%}
		  {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</div>
{%- endcapture -%}
{{ html | strip_newlines | replace:'	','' | replace:'    ','' | replace:'  ',' ' }}
{%- render 'section_typography' -%}
{%- capture css -%}
<style>
  .slick-slide video {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    transform: translate(-50%, -50%);
  }
  .main-slider {
    position: relative;
    width: 100%;
    height: 38vw;
    min-height: 8vw;
    margin-bottom: 50px;
    opacity: 0;
    visibility: hidden;
    transition: all 1.2s ease;
  }
  .main-slider.slick-initialized {
    opacity: 1;
    visibility: visible;
  }
  .slick-slide iframe {
    position: relative;
    pointer-events: none;
  }
  .slick-slide .slide-image {
    opacity: 0;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: all 0.8s ease;
  }
  .main-slider .slick-slide {
    position: relative;
    height: {{ section.settings.video_height }}px;
  }
  @media (min-width: 992px) and (max-width: 1199px) {
    #section-{{ section.id }} .main-slider .slick-slide {
      height: {{ section.settings.video_lg_height }}px;
    }
  } 
  @media (min-width: 768px) and (max-width: 991px) {
    #section-{{ section.id }} .main-slider .slick-slide {
      height: {{ section.settings.video_md_height }}px;
    }
  } 
  @media (min-width: 575px) and (max-width: 767px) {
    #section-{{ section.id }} .main-slider .slick-slide {
      height: {{ section.settings.video_sm_height }}px;
    }
  }
  @media (max-width: 575px)  {
    #section-{{ section.id }} .main-slider .slick-slide {
      height: {{ section.settings.video_xs_height }}px;
    }
  }
  
</style>
{%- endcapture -%}

{{ css | strip_newlines
       | replace: '  ', '' 
       | replace: ': ', ':'
       | replace: ' {', '{'
}}

{% schema %}
  {
    "name": "Full Width Video",
    "settings": [
		{
		  "type": "header",
          "content": "Section Heading"
        },
		{
          "type": "text",
          "id": "section_title",
          "label": "Section Title",
          "default": "Section Title Here"
      	},
		{
			"type": "header",
            "content": "Video Section Height Options"
		},
		{
          "type": "range",
          "id": "video_height",
          "min": 300,
          "max": 1000,
          "step": 10,
          "label": "Slider Height ",
		  "info": "It'll work ( More Than 1200px )",
          "unit": "px",
          "default": 700
        },
		{
          "type": "range",
          "id": "video_lg_height",
          "min": 300,
          "max": 1000,
          "step": 10,
          "label": "Slider Height ",
		  "info": "More Than 992px and Less Than 1199px(Laptop or Small Desktop)",
          "unit": "px",
          "default": 650
        },
		{
          "type": "range",
          "id": "video_md_height",
          "min": 200,
          "max": 800,
          "step": 10,
          "label": "Slider Height ",
		  "info": "More Than 768px and Less Than 991px( Tablet)",
          "unit": "px",
          "default": 600
        },
		{
          "type": "range",
          "id": "video_sm_height",
          "min": 100,
          "max": 700,
          "step": 10,
          "label": "Slider Height ",
		  "info": "More Than 767px and Less Than 575px( Large Mobile)",
          "unit": "px",
          "default": 500
        },
		{
          "type": "range",
          "id": "video_xs_height",
          "min": 100,
          "max": 700,
          "step": 10,
          "label": "Slider Height ",
		  "info": "Less Than 575px (Small Mobile)",
          "unit": "px",
          "default": 400
        }
	],
	"blocks":[
	    {
          "type": "vimeo_video",
          "name": "Vimeo Video",
          "settings": [
            {
               "id": "banner_video_url",
               "type": "video_url",
               "label": "Video URL",
               "accept": ["youtube","vimeo"],
               "default": "https://vimeo.com/518099808"
            }
          ]
       },   
	   {
          "type": "youtube_video",
          "name": "Youtube Video",
          "settings": [
            {
               "id": "banner_video_url",
               "type": "video_url",
               "label": "Video URL",
               "accept": ["youtube","vimeo"],
               "default": "https://www.youtube.com/watch?v=8uFEVF6aTR4"
            }
          ]
       },
	   {
          "type": "local_video",
          "name": "Local Video MP4",
          "settings": [
            {
               "id": "banner_video_url",
               "type": "text",
               "label": "Local Video URL",
			   "info": "Put your MP4 video URL",
               "default": "https:\/\/cdn.shopify.com\/s\/files\/1\/0051\/3989\/0225\/files\/Kinraden_Moving_No_3_e1f27024-3720-409b-94ae-3bf9e628b06b.mp4?v=1616421118"
            },
            {
              "type": "text",
              "id": "poster_banner_url",
              "label": "Poster Image",
			   "info": "Put your video poster image URL",
              "info": "Recommended Size: 1920 x 700px"
            }
          ]
       },
	   {
          "type": "section_padding",
          "name": "Section Padding",
		  "limit": 1,
          "settings": [
            {
			  "type": "header",
			  "content": "Large/Desktop Device"
			},
			{
			  "type": "range",
			  "id": "section_padding_top",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_padding_bottom",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Bottom",
			  "unit": "px",
			  "default": 100
			},
			{
			  "type": "header",
			  "content": "Tablet Device"
			},
			{
			  "type": "range",
			  "id": "section_padding_top_md",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_padding_bottom_md",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Bottom",
			  "unit": "px",
			  "default": 80
			},
			{
			  "type": "header",
			  "content": "Mobile Device"
			},
			{
			  "type": "range",
			  "id": "section_padding_top_xs",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_padding_bottom_xs",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Padding Bottom",
			  "unit": "px",
			  "default": 60
			}
          ]
       },
	   {
          "type": "section_margin",
          "name": "Section Margin",
		  "limit": 1,
          "settings": [
            {
			  "type": "header",
			  "content": "Large/Desktop Device"
			},
			{
			  "type": "range",
			  "id": "section_margin_top",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_margin_bottom",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Bottom",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "header",
			  "content": "Tablet Device"
			},
			{
			  "type": "range",
			  "id": "section_margin_top_md",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_margin_bottom_md",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Bottom",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "header",
			  "content": "Mobile Device"
			},
			{
			  "type": "range",
			  "id": "section_margin_top_xs",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Top",
			  "unit": "px",
			  "default": 0
			},
			{
			  "type": "range",
			  "id": "section_margin_bottom_xs",
			  "min": 0,
			  "max": 150,
			  "step": 5,
			  "label": "Margin Bottom",
			  "unit": "px",
			  "default": 0
			}
          ]
       },
	   {
          "type": "section_background",
          "name": "Section Background",
		  "limit": 1,
          "settings": [
            {
			  "type": "image_picker",
			  "id": "section_bg_image",
			  "label": "BG Image"
			},
			{
			  "type": "color",
			  "id": "section_bg_color",
			  "label": "BG Color",
			  "default": "#ffffff"
			}
          ]
       }
	],
	"presets": [
		{
		  "name": "Full Width Video",
		  "category": "9.5 Video",
		  "blocks":[
				{
					"type": "section_padding"
				}
			]
		}
	]
  }
{% endschema %}

<script async>
  
 var slideWrapper = $(".main-slider"),
    iframes = slideWrapper.find('.embed-player'),
    lazyImages = slideWrapper.find('.slide-image'),
    lazyCounter = 0;

// POST commands to YouTube or Vimeo API
function postMessageToPlayer(player, command){
  if (player == null || command == null) return;
  player.contentWindow.postMessage(JSON.stringify(command), "*");
}

// When the slide is changing
function playPauseVideo(slick, control){
  var currentSlide, slideType, startTime, player, video;

  currentSlide = slick.find(".slick-current");
  slideType = currentSlide.attr("class").split(" ")[1];
  player = currentSlide.find("iframe").get(0);
  startTime = currentSlide.data("video-start");

  if (slideType === "vimeo") {
    switch (control) {
      case "play":
        if ((startTime != null && startTime > 0 ) && !currentSlide.hasClass('started')) {
          currentSlide.addClass('started');
          postMessageToPlayer(player, {
            "method": "setCurrentTime",
            "value" : startTime
          });
        }
        postMessageToPlayer(player, {
          "method": "play",
          "value" : 1
        });
        break;
      case "pause":
        postMessageToPlayer(player, {
          "method": "pause",
          "value": 1
        });
        break;
    }
  } else if (slideType === "youtube") {
    switch (control) {
      case "play":
        postMessageToPlayer(player, {
          "event": "command",
          "func": "mute"
        });
        postMessageToPlayer(player, {
          "event": "command",
          "func": "playVideo"
        });
        break;
      case "pause":
        postMessageToPlayer(player, {
          "event": "command",
          "func": "pauseVideo"
        });
        break;
    }
  } else if (slideType === "video") {
    video = currentSlide.children("video").get(0);
    if (video != null) {
      if (control === "play"){
        video.play();
      } else {
        video.pause();
      }
    }
  }
}

// Resize player
function resizePlayer(iframes, ratio) {
  if (!iframes[0]) return;
  var win = $(".main-slider"),
      width = win.width(),
      playerWidth,
      height = win.height(),
      playerHeight,
      ratio = ratio || 16/9;

  iframes.each(function(){
    var current = $(this);
    if (width / ratio < height) {
      playerWidth = Math.ceil(height * ratio);
      current.width(playerWidth).height(height).css({
        left: (width - playerWidth) / 2,
         top: 0
        });
    } else {
      playerHeight = Math.ceil(width / ratio);
      current.width(width).height(playerHeight).css({
        left: 0,
        top: (height - playerHeight) / 2
      });
    }
  });
}

// DOM Ready
$(function() {
  // Initialize
  slideWrapper.on("init", function(slick){
    slick = $(slick.currentTarget);
    setTimeout(function(){
      playPauseVideo(slick,"play");
    }, 1000);
    resizePlayer(iframes, 16/9);
  });
  slideWrapper.on("beforeChange", function(event, slick) {
    slick = $(slick.$slider);
    playPauseVideo(slick,"pause");
  });
  slideWrapper.on("afterChange", function(event, slick) {
    slick = $(slick.$slider);
    playPauseVideo(slick,"play");
  });
  slideWrapper.on("lazyLoaded", function(event, slick, image, imageSource) {
    lazyCounter++;
    if (lazyCounter === lazyImages.length){
      lazyImages.addClass('show');
      // slideWrapper.slick("slickPlay");
    }
  });

  //start the slider
  slideWrapper.slick({
    // fade:true,
    autoplaySpeed:4000,
    lazyLoad:"progressive",
    speed:600,
    arrows:false,
    dots:false,
    cssEase:"cubic-bezier(0.87, 0.03, 0.41, 0.9)"
  });
});

// Resize event
$(window).on("resize.slickVideoPlayer", function(){  
  resizePlayer(iframes, 16/9);
});
</script>
